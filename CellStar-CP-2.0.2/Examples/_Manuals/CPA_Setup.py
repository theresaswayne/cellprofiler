# CPA SETUP SCRIPT v.1.1
#
# This script modify properties file generated by CellProfiler:
# - set ignored columns
# - remove multi-page tif files from setup if other image names given
# - change tile size
# - setup default view (brightfield with outlines)

# REMARKS:
# - Might not work if images are created in different order (find is exact). If so the original line in replace has to be replaced in replace_only_once operations
# - After usage check if all changes has been applied.

##### CHANGES TO MAKE ######

properties_file_name = "YeastDB.properties"

new_classifier_ignore_columns = "classifier_ignore_columns  =  table_number_key_column, image_number_key_column, object_number_key_column, ImageNumber, ObjectNumber, .*Parent.*, .*Children.*, .*Center_.*, .*Location.*, .*_Metadata_.*, .*_Number_Object_Number"

new_brightfield_image_name = "Input_Br_Small"
new_brightfield_image_file_name = "Image_FileName_" + new_brightfield_image_name
new_brightfield_image_path_name = "Image_PathName_" + new_brightfield_image_name

new_outlines_image_name = "PrefilteredYeastCellsOutlines"
new_outlines_image_file_name = "Image_FileName_" + new_outlines_image_name
new_outlines_image_path_name = "Image_PathName_" + new_outlines_image_name

tile_size = "80"

############################


import Tkinter
import tkFileDialog
import os

root = Tkinter.Tk()
root.withdraw() #use to hide tkinter window

tempdir = tkFileDialog.askdirectory(parent=root, initialdir='.', title='Please select output directory')
if len(tempdir) > 0:
    
    path_to_prop = tempdir + "/" + properties_file_name

    replace_num = 0
    operation_num = 0

    def replace_only_once(data, fromText, toText):
        global replace_num, operation_num
        operation_num += 1
        if not (toText in data):
            replace_num += 1 
            return data.replace(fromText, toText)
        return data

    print("Setting ignore columns for file " + path_to_prop + "...")
    with open(path_to_prop, "r") as f:
        data = f.read()

    new_data_1 = replace_only_once(data, "classifier_ignore_columns  =  table_number_key_column, image_number_key_column, object_number_key_column", new_classifier_ignore_columns)

    new_data_2 = replace_only_once(new_data_1, 
    "image_path_cols = Image_PathName_Input_Br_Org,Image_PathName_PrefilteredYeastCellsOutlines,Image_PathName_Input_Br_Small", 
    "image_path_cols = " + new_outlines_image_path_name + "," + new_brightfield_image_path_name)
    
    new_data_3 = replace_only_once(new_data_2, 
    "image_file_cols = Image_FileName_Input_Br_Org,Image_FileName_PrefilteredYeastCellsOutlines,Image_FileName_Input_Br_Small", 
    "image_file_cols = " + new_outlines_image_file_name + "," + new_brightfield_image_file_name)

    new_data_4 = replace_only_once(new_data_3, 
    "image_names = Input_Br_Org,PrefilteredYeastCellsOutlines,Input_Br_Small", 
    "image_names = " + new_outlines_image_name + "," + new_brightfield_image_name)
    
    new_data_5 = replace_only_once(new_data_4, "image_channel_colors = ", "image_channel_colors = blue,gray")

    new_data_6 = replace_only_once(new_data_5, "image_tile_size   =  50", "image_tile_size   =  " + tile_size)

    with open(path_to_prop, "w") as f:
        data = f.write(new_data_6)
        
    print ("{0} out of {1} settings changed".format(replace_num, operation_num))
        
    print("...Done")

    import os
    os.system("pause")